# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: src/endpoint/endpoint.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class ValidationRequest(betterproto.Message):
    test: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RequestId(betterproto.Message):
    id: int = betterproto.int32_field(1)


class ValidationEndpointStub(betterproto.ServiceStub):
    async def validate(
        self,
        validation_request: "ValidationRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "RequestId":
        return await self._unary_unary(
            "/endpoint.ValidationEndpoint/Validate",
            validation_request,
            RequestId,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class ValidationEndpointBase(ServiceBase):
    async def validate(self, validation_request: "ValidationRequest") -> "RequestId":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_validate(
        self, stream: "grpclib.server.Stream[ValidationRequest, RequestId]"
    ) -> None:
        request = await stream.recv_message()
        response = await self.validate(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/endpoint.ValidationEndpoint/Validate": grpclib.const.Handler(
                self.__rpc_validate,
                grpclib.const.Cardinality.UNARY_UNARY,
                ValidationRequest,
                RequestId,
            ),
        }
